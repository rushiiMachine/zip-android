name: Build & Publish Release

concurrency:
  group: "release"
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    tags:
      - "*.*.*"

# Required actions secrets:
# SONATYPE_USERNAME: sonatype staging repo user token username
# SONATYPE_PASSWORD: sonatype staging repo user token password
# SIGNING_KEY_ID: last 8 chars of master/(singing) subkey fingerprint (gpg --list-keys --keyid-format short)
# SIGNING_KEY: an armored gpg key: (gpg --armor --export-secret-key <MASTER_ID>) OR (gpg --armor --export-secret-subkey <SHORT_ID>!)
# SIGNING_PASSWORD: password for key-block

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: zulu

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Rust toolchain
        run: |
          rustup toolchain add --profile=minimal nightly
          rustup default nightly
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
          cargo ndk --version || cargo install cargo-ndk

      - name: Build & Publish to Maven
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_RELEASE_SIGNING_ENABLED: true
        run: |
          chmod +x ./gradlew
          ./gradlew :lib:publishToMavenLocal :lib:publish --stacktrace


      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libziprs
          path: ~/.m2/repository/**
          if-no-files-found: error

      - name: Prepare Release
        run: |
          (cd ~/.m2/repository/ && zip -r /tmp/libziprs.zip .)

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: /tmp/libziprs.zip
