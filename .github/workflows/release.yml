name: Build & publish release

concurrency:
  group: "build"
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - release

# Required actions secrets:
# SONATYPE_USERNAME: sonatype staging repo user token username
# SONATYPE_PASSWORD: sonatype staging repo user token password
# SIGNING_KEY_ID: last 8 chars of master/(singing) subkey fingerprint (gpg --list-keys --keyid-format short)
# SIGNING_KEY: an armored gpg key: (gpg --armor --export-secret-key <MASTER_ID>) OR (gpg --armor --export-secret-subkey <SHORT_ID>!)
# SIGNING_PASSWORD: password for key-block

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: release
          path: "src"

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: zulu
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            $GITHUB_WORKSPACE/jni/target/
            $GITHUB_WORKSPACE/zip/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true

      - name: Setup Rust Environment
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android
          cargo ndk --version || cargo install cargo-ndk

      - name: Test version
        id: version
        run: |
          cd $GITHUB_WORKSPACE/src
          version=$(cat lib/build.gradle.kts | grep -E '^version = "' | cut -d \" -f 2)
          if git show-ref --tags --quiet --verify -- "refs/tags/$version" >/dev/null; then
            echo "Git tag $version already exists, failing to publish";
            exit 1
          else
            echo "::set-output name=release_tag::$version"
          fi

      - name: Build and Maven publish
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew lib:publish --no-daemon

      - name: Prepare Release
        run: |
          mkdir -p $GITHUB_WORKSPACE/builds
          mv -T $GITHUB_WORKSPACE/src/lib/build/outputs/aar/lib-release.aar $GITHUB_WORKSPACE/builds/libziprs-release.aar

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.release_tag }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: builds/libziprs-release.aar
